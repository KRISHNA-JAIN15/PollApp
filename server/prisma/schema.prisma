// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int      @id @default(autoincrement())
  name             String
  email            String   @unique
  password         String
  isVerified       Boolean  @default(false)
  verificationCode String?
  polls            Poll[]
  votes            Vote[]
  createdAt        DateTime @default(now())
}

model Poll {
  id        Int      @id @default(autoincrement())
  question  String
  options   Option[]
  createdBy User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  createdAt DateTime @default(now())
}

model Option {
  id     Int    @id @default(autoincrement())
  text   String
  poll   Poll   @relation(fields: [pollId], references: [id], onDelete: Cascade)
  pollId Int
  votes  Vote[]
}

model Vote {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  option    Option   @relation(fields: [optionId], references: [id], onDelete: Cascade)
  optionId  Int
  createdAt DateTime @default(now())

  @@unique([userId, optionId])
}
